{"version":3,"sources":["lib/utils.js","lib/api.js","SearchResults.js","ArtistDetails.js","App.js","reportWebVitals.js","index.js"],"names":["d","heading","css","args","window","DEBUG","secondArg","undefined","startsWith","split","slice","arguments","length","console","log","SPOTIFY_BASE_URL","SPOTISURF_CLOUD_FUNCTION_TOKEN_URL","api","getToken","axios","get","then","res","data","token","setToken","catch","err","warn","Error","defaults","headers","common","Authorization","localStorage","setItem","getSearchResults","text","errorHandler","params","q","type","e","handleRequestError","request","getArtistTopTracks","id","country","getArtistRecommendations","energy","seed_artists","instrumentalness","getArtistInfo","req","response","status","dir","statusText","generateNewTokenAndRetry","lastRequest","SearchResults","state","results","errorMsg","this","props","searchText","onError","setState","artists","items","prevProps","prevState","map","a","className","style","backgroundImage","getImageURL","onClick","onArtistSelect","name","genres","images","React","Component","artist","url","ArtistDetails","tracks","recommendations","nowPlaying","lastPlaying","sliders","loadingMsg","audioPlayers","handleKeyDown","ev","target","preventDefault","key","audio","player","fadeIn","track","index","fadeOut","open","external_urls","spotify","playPreviousTrack","prevAudio","prevIndex","playNextTrack","nextAudio","nextIndex","updateSlider","value","parseFloat","handleTrackClick","currentTarget","firstElementChild","handleEndOfTrack","viewRecommendedArtist","rec","stopPropagation","onViewArtist","fetchDetails","addEventListener","removeEventListener","i","item","clickHandler","playerRefs","onTrackEnd","recClass","volume","vol","fAudio","setInterval","toFixed","clearInterval","pause","play","Track","children","preview_url","ref","onEnded","src","Heading","rel","href","title","join","App","handleChange","query","setCurrentArtist","currentArtist","breadcrumbTrail","setErrorMsg","msg","handleSubmit","search","searchInput","current","blur","loadArtist","relatedArtists","createRef","focus","URLSearchParams","location","testSearch","localStorageToken","getItem","onSubmit","placeholder","onChange","trail","BreadcrumbTrail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d88fff02.chunk.js","sourcesContent":["\nconst d = function(heading, css, ...args) {\n\n  if( !window.DEBUG ) return;\n\n  let secondArg = '';\n  if (css !== undefined && typeof css === 'string' && css.startsWith('css')){\n    css = css.split('css').slice(1);\n  } else {\n    if( arguments.length > 1 ) {\n      secondArg = css;\n    }\n    css = 'font-size: 16px; color: orange;';\n  }\n\n  console.log(`%c${heading}`, css, secondArg, ...args );\n\n};\n\nexport { d };\n","import axios from 'axios';\n\nimport { d } from './utils';\n\nexport const SPOTIFY_TOKEN = \"BQBpFndilXEda4OZZz4teiSDnBC8oliDTvqmFWaGfcEOqvpwphS6N1QjYcXcDC1b8hAdgRLPBpWA_l2GUjs\";\nconst SPOTIFY_BASE_URL = 'https://api.spotify.com/v1/';\nconst SPOTISURF_CLOUD_FUNCTION_TOKEN_URL = 'https://us-central1-functions-test-24b29.cloudfunctions.net/spotisurf?test=1';\n\n\nconst api = {\n\n  getToken(){\n    d( 'getToken' );\n\n    return axios.get(SPOTISURF_CLOUD_FUNCTION_TOKEN_URL)\n    .then( res => {\n      console.log('%cset init token %s', 'color: green; font-size: 14px;', res.data.token, );\n      this.setToken( res.data.token );\n      return true;\n    })\n    .catch( err => {\n      console.warn('api.getToken(): FAILED to get initial token', err);\n      throw new Error('api.getToken(): FAILED to get initial token'); // to trigger catch in calling component\n    });\n\n  }, // getToken\n\n\n  setToken( token ){\n    d( 'setToken', token );\n    axios.defaults.headers.common.Authorization = 'Bearer ' + token;\n    localStorage.setItem('spotifyToken', token); // TODO: test if available first?\n  },\n\n\n  getSearchResults( text, errorHandler ){\n    // 1. IF the query is successful, return the promise, which is handled\n    // immediately by the .then() callback in the component (i.e. do a setState)\n    d( 'getSearchResults', {text, errorHandler} );\n    return axios.get(SPOTIFY_BASE_URL + 'search', {\n      params: {\n        q: text,\n        type: 'artist'\n      },\n    })\n    // 2. OTHERWISE if the query fails (probably due to token expiry), then\n    // return whatever handleRequestError returns, which should be the promise\n    // from the axios request in the generateNewTokenAndRetry method it uses\n    .catch( e  => {\n      console.log('CATCH getSearchResults (API)');\n      return this.handleRequestError( e, { request: 'getSearchResults', args: [text], errorHandler });\n    }); // catch\n\n  }, // getSearchResults\n\n\n  getArtistTopTracks( id, errorHandler ){\n    d('getArtistTopTracks', {id, errorHandler});\n    return axios.get(SPOTIFY_BASE_URL + `artists/${id}/top-tracks`, {\n      params:  { country: 'AU' },\n    })\n    .catch( e  => {\n      console.log('CATCH getArtistTopTracks (API)');\n      return this.handleRequestError(e, { request: 'getArtistTopTracks', args: [id], errorHandler }) ;\n    });\n\n  }, // getArtistTopTracks\n\n\n  getArtistRecommendations( id, energy, errorHandler ){\n    d('getArtistRecommendations', {id, energy, errorHandler});\n    const params = { seed_artists: id };\n    if( energy ){\n      params.instrumentalness = energy;\n    }\n    return axios.get(SPOTIFY_BASE_URL + 'recommendations', {\n      params:  params,\n    })\n    .catch( e  => {\n      console.log('CATCH getArtistRecommendations (API)');\n      return this.handleRequestError(e, { request: 'getArtistRecommendations', args: [id], errorHandler }) ;\n    });\n\n  }, // getArtistTopTracks\n\n\n  getArtistInfo( id, errorHandler ){\n    d('getArtistInfo', {id, errorHandler});\n    return axios.get( SPOTIFY_BASE_URL + `artists/${id}` )\n    .catch( e  => {\n      console.log('CATCH getArtistInfo (API)');\n      return this.handleRequestError(e, { request: 'getArtistInfo', args: [id], errorHandler }) ;\n    });\n\n  }, // getArtistInfo\n\n\n  handleRequestError( err, req ){\n    d('handleRequestError', {err, req});\n    if( err.response.status !== 401 ){\n      console.dir( err );\n      console.warn('API ERROR', req.request, err.status, err.statusText);\n      return; // return/throw error here? probably not, just fail quietly (??)\n    }\n\n    console.log('%cGenerating new token...', 'color: orange; font-weight: bold', req);\n\n    req.errorHandler && req.errorHandler('Generating new token...');\n\n    // 3. Try again and return the promise from the axios.get() in generateNewTokenAndRetry\n    return api.generateNewTokenAndRetry(req); // see comments in this method below\n\n  }, // handleRequestError\n\n\n  generateNewTokenAndRetry( lastRequest ){\n\n    // Spotify API tokens expire after an hour, so if a request fails, it's\n    // probably because the token has expired.\n    // When this happens, we make a request to the Cloud Function endpoint, which\n    // makes a request to the Spotify accounts API endpoint using the API secret to\n    // create a new access token, which is stored in the database, and sent as the\n    // response to this getJSON request. We set the new token into our JS\n    // var and re-try the last API request.\n    // We need a Cloud Function for regenerating the token, because it involves API\n    // secret keys which are not intended to be exposed to the frontend.\n\n    // 4. Get new token and return promise to component making original API request\n    d('generateNewTokenAndRetry', {lastRequest});\n    return axios.get(SPOTISURF_CLOUD_FUNCTION_TOKEN_URL)\n    .then( res => {\n\n      this.setToken( res.data.token );\n\n      console.log('%crefreshed token', 'font-size: 14pt; font-weight: bold;', res.data);\n      lastRequest.errorHandler && lastRequest.errorHandler(''); // clear error\n\n      // re-attempt last API call with new token, to avoid user confusion or page reload:\n      console.log('Re-try API call:', lastRequest.request, lastRequest);\n      return api[ lastRequest.request ]( ...lastRequest.args );\n\n    })\n    .catch( err => {\n      console.warn('TOKEN REFRESH FAIL');\n      console.dir(err);\n      lastRequest.errorHandler('Unable to refresh API token');\n\n      // This throw prevents the 'then' handler from running in parent component,\n      // i.e. by handling the current error with this catch() the promise\n      // would be resolved, by default\n      throw new Error('Unable to refresh API token');\n    });\n\n  }, // generateNewTokenAndRetry\n\n\n}; // api\n\nexport default api;\n","import React from 'react';\n\n// REMOVE except for testing!\nimport api from './lib/api';\n\nimport './SearchResults.css';\n\nclass SearchResults extends React.Component {\n\n  state = {\n    results: [],\n    errorMsg: ''\n  };\n\n  componentDidMount(){\n    console.log('<SearchResults>', this.props.searchText);\n\n    api.getSearchResults( this.props.searchText, this.props.onError )\n    .then( res => this.setState({ results: res.data.artists.items }) );\n    // ☝️ this will run after the api code catches an error,\n    // (because whenever you catch, a resolved promise results) unless\n    // the catch (in generateNewTokenAndRetry) also throws an error\n\n    // .catch( e => { console.log('CATCH 1 (component)', e); })\n    // this doesn't run unless the API catch also throws an error\n\n  } // componentDidMount\n\n\n    componentDidUpdate(prevProps, prevState){\n      if( this.props.searchText !== prevProps.searchText ){\n        // re-submit search when search text prop changes\n        this.setState({ results: [] }); // clear old results\n        api.getSearchResults( this.props.searchText, this.props.onError )\n        .then( res => this.setState({ results: res.data.artists.items }) )\n      }\n    } // componentDidUpdate\n\n  render(){\n\n    return (\n      <div>\n        <h3>Results for <em>{ this.props.searchText }</em></h3>\n        <ul id=\"resultsList\">\n          { this.state.results.map( a => (\n            <li className=\"result\"\n             key={a.id}\n             style={{ backgroundImage: getImageURL(a) }}\n             onClick={ () => this.props.onArtistSelect(a.id, a.name, a.genres, a.images) }>\n              <div className=\"name\">\n                <strong>{ a.name }</strong>\n              </div>\n            </li>\n          )) }\n        </ul>\n      </div>\n    );\n  } // render\n\n} // class SearchResults\n\n\n\nconst getImageURL = (artist) => {\n  if( 'images' in artist  &&  artist.images.length > 0 ){\n    return 'url(' + artist.images[0].url + ')';  // length-1 for smallest?\n  }\n  return '';\n};\n\n\nexport default SearchResults;\n","import React from 'react';\nimport api from './lib/api';\n\nimport './ArtistDetails.css';\n\nimport { d } from './lib/utils';\n\nwindow.DEBUG = true;\n\n\nclass ArtistDetails extends React.Component {\n\n  state = {\n    tracks: [],\n    recommendations: [],\n    nowPlaying: {},\n    lastPlaying: {},\n    sliders: { energy: null },\n    loadingMsg: 'Loading artist...'\n  };\n\n  audioPlayers = []; // to store audio player tags as 'refs'\n\n  fetchDetails(){\n\n    if( this.state.nowPlaying.audio ){\n      player.fadeOut( this.state.nowPlaying.audio );\n    }\n\n    this.setState({ nowPlaying: {}, lastPlaying: {} }); // clear playing details\n\n    api.getArtistTopTracks( this.props.artist.id, this.props.onError )\n    .then( res => this.setState({ tracks: res.data.tracks, loadingMsg: '' }) );\n\n    api.getArtistRecommendations( this.props.artist.id, this.state.sliders.energy, this.props.onError )\n    .then( res => this.setState({ recommendations: res.data.tracks }) );\n\n  } // fetchDetails\n\n\n  componentDidMount(){\n\n    console.log('<ArtistDetails>', this.props.artist.id);\n    this.fetchDetails();\n\n    // listen for keypresses to control audio playback\n    window.addEventListener('keydown', this.handleKeyDown);\n\n  } // componentDidMount\n\n\n  componentDidUpdate(prevProps, prevState){\n    if( this.props.artist.id !== prevProps.artist.id ){\n      // fetch new details (user clicked on another artist in the results)\n      d('Update fetchDetails()', this.props.artist);\n      this.fetchDetails();\n    }\n  } // componentDidUpdate\n\n\n  componentWillUnmount() {\n    // clean up\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n\n  handleKeyDown = (ev) => {\n    if( ev.target.id === 'searchText' ){\n      return; // ignore typing into search form\n    }\n    // console.log('handleKeyDown()', ev);\n\n    let preventDefault = true;\n    const {nowPlaying, lastPlaying} = this.state;\n\n\n    // TODO: moving left/right between tracks too quickly occasionally\n    // prevents the last track from pausing before the next one starts...\n    // need a throttle timeout to prevent moving too quickly\n\n    switch( ev.key ){\n\n    case ' ':\n      // Spacebar toggles current audio playback, or starts current artist track\n\n      if(nowPlaying.audio === undefined ){\n\n        if(lastPlaying.audio === undefined ){\n          // start playing the first of the artist tracks (using the array of\n          // audio tag refs)\n          player.fadeIn( this.audioPlayers[0] );\n          this.setState({\n            nowPlaying: {\n              track: this.state.tracks[0],\n              audio: this.audioPlayers[0],\n              index: 0 }\n          });\n        } else {\n          // play last playing track\n          player.fadeIn(lastPlaying.audio);\n          this.setState({ nowPlaying: {...lastPlaying} });\n        }\n\n      } else {\n        // nowPlaying is set, i.e. audio is playing - pause current track\n        player.fadeOut(nowPlaying.audio);\n        this.setState({ lastPlaying: {...nowPlaying}, nowPlaying: {} });\n      }\n      break;\n\n    case 'Enter':\n      // Enter opens the currently playing track as a new Spotify tab\n\n      if( this.state.nowPlaying.audio === undefined ){\n        return; // ignore when nothing is playing\n      }\n\n      if( nowPlaying.index >= 10 ){\n        // recommended track\n        window.open( nowPlaying.track.artists[0].external_urls.spotify );\n      } else {\n        // current artist track\n        window.open( nowPlaying.track.external_urls.spotify );\n        player.fadeOut( nowPlaying.audio ); // stop playing because Spotify track page autoplays 🙄\n      }\n      break;\n\n    case 'ArrowLeft':\n      // Play previous track\n      const { prevAudio, prevIndex } = player.playPreviousTrack( nowPlaying, this.audioPlayers );\n      if( prevIndex === null ){\n        return; // none found\n      }\n\n      this.setState({\n        nowPlaying: {\n          // indexes 0-9 are artist tracks, 10-29 are recommendations\n          track: prevIndex < 10 ? this.state.tracks[prevIndex] : this.state.recommendations[prevIndex-10],\n          audio: prevAudio,\n          index: prevIndex\n        }\n      });\n\n      break;\n\n    case 'ArrowRight':\n      // Play next track\n      const { nextAudio, nextIndex } = player.playNextTrack( nowPlaying, this.audioPlayers );\n      if( nextIndex === null ){\n        return; // none found\n      }\n\n      this.setState({\n        nowPlaying: {\n          // indexes 0-9 are artist tracks, 10-29 are recommendations\n          track: nextIndex < 10 ? this.state.tracks[nextIndex] : this.state.recommendations[nextIndex-10],\n          audio: nextAudio,\n          index: nextIndex\n        }\n      });\n\n      break;\n\n    default:\n      preventDefault = false; // stop preventDefault() from running, below\n    } // switch\n\n    // If we don't preventDefault() for unused keys,\n    // shorts for reload, open dev tools etc stop working!\n    preventDefault && ev.preventDefault();\n\n  } // handleKeyDown\n\n\n  updateSlider = (ev) => {\n    const { name, value } = ev.target;\n    console.log('slider update', { name, value});\n    this.setState({\n      sliders: {\n        ...this.state.sliders, // existing state for other sliders\n        [name]: parseFloat(value)\n      }\n    });\n\n    api.getArtistRecommendations( this.props.artist.id, value, this.props.onError )\n    .then( res => this.setState({ recommendations: res.data.tracks }) );\n\n\n  } // updateSlider\n\n\n  handleTrackClick = (ev, track, index) => {\n\n    if( !this.audioPlayers[index] ){\n      return; // ignore click on items without audio previews (need 'goto' link to work)\n    }\n\n    // Get the audio element; it's the first child of the <li>\n    // TODO: is there a neater way to do this? - ideally avoid arrow fns in render JSX\n    const audio = ev.currentTarget.firstElementChild;\n    const nowPlaying = this.state.nowPlaying;\n    // console.log('audio', audio, ev);\n\n    if( nowPlaying.audio ){\n      player.fadeOut( nowPlaying.audio );\n      if( nowPlaying.track.id === track.id ){\n        // if we just clicked the currently-playing track, don't start it again below\n\n        this.setState({ lastPlaying: {...this.state.nowPlaying}, nowPlaying: {} });\n        return;\n      }\n\n    } // if already playing\n\n    player.fadeIn( audio );\n    this.setState({ nowPlaying: { track, audio, index } });\n\n  } // handleTrackClick\n\n\n  handleEndOfTrack = (ev) => {\n    // triggered automatically by end of <audio> preview playback\n    // TODO: option to disable auto-advance?\n    const { nextAudio, nextIndex } = player.playNextTrack( this.state.nowPlaying, this.audioPlayers );\n    if( nextIndex === null ){\n      return; // none found\n    }\n\n    this.setState({\n      nowPlaying: {\n        // indexes 0-9 are artist tracks, 10-29 are recommendations\n        track: nextIndex < 10 ? this.state.tracks[nextIndex] : this.state.recommendations[nextIndex-10],\n        audio: nextAudio,\n        index: nextIndex\n      }\n    });\n\n  } // handleEndOfTrack\n\n\n  viewRecommendedArtist = (ev, rec) => {\n    ev.stopPropagation(); // do not treat as track play/pause click\n    this.props.onViewArtist( rec.artists[0].id ); // send to parent to load via API\n  } // viewRecommendedArtist\n\n\n  render(){\n\n    return (\n      <div id=\"details\" style={{ backgroundImage: getImageURL(this.props.artist.images) }}>\n        { /* <h2 className=\"loading\">Loading artist...</h2> */ }\n\n        <Heading\n         name={ this.props.artist.name }\n         tracks={ this.state.tracks }\n         genres={ this.props.artist.genres } />\n\n        <div className=\"grid\">\n          <div className=\"topTracks\">\n            <h4>Top Tracks</h4>\n            <ul>\n              {\n              this.state.tracks.map( (track, i) => (\n                <Track index={ i } key={ track.id }\n                 item={ track }\n                 nowPlaying={this.state.nowPlaying}\n                 clickHandler={ this.handleTrackClick }\n                 playerRefs={ this.audioPlayers }\n                 onTrackEnd={ this.handleEndOfTrack } >\n                   <em>{ track.name }</em>\n                </Track>\n              ))\n              }\n            </ul>\n          </div>{ /* div.topTracks */ }\n          <div className=\"recs\">\n            <h4>Recommendations</h4>\n            { /* energy: <input type=\"range\" name=\"energy\" min=\"0.0\" max=\"1.0\" step=\"0.01\" onMouseUp={ this.updateSlider } /> <br/> */ }\n            <ul>\n            {\n            this.state.recommendations.map( (rec, i) => (\n              <Track recClass=\"rec\" key={ rec.id }\n               item={ rec }\n               index={ i+10 }\n               nowPlaying={ this.state.nowPlaying}\n               clickHandler={ this.handleTrackClick }\n               playerRefs={ this.audioPlayers }\n               onTrackEnd={ this.handleEndOfTrack } >\n                 &nbsp; { rec.artists[0].name } &nbsp;\n                 <span className=\"trackName\">– { rec.name }</span>\n                 <span className=\"goto\" onClick={ (ev) => this.viewRecommendedArtist(ev, rec) }>view</span>\n              </Track>\n            ))\n            }\n            </ul>\n          </div>{ /* div.recs */ }\n        </div>{ /* div.grid */ }\n      </div>\n    );\n  } // render\n\n} // class ArtistDetails\n\n\nconst player = {\n\n  playPreviousTrack( nowPlaying, audioPlayers ){\n\n    if( nowPlaying.track === undefined ){\n      return {prevAudio: null, prevIndex: null};\n    }\n\n    let prevIndex = nowPlaying.index - 1;\n    let prevAudio = audioPlayers[ prevIndex ];\n\n    while( prevIndex >= 0 && !prevAudio ){\n      prevIndex--;\n      prevAudio = audioPlayers[ prevIndex ];\n    }\n\n    if( !prevAudio ){\n      return {prevAudio: null, prevIndex: null}; // start of list\n    }\n\n    // stop current, start next\n    this.fadeOut( nowPlaying.audio );\n    this.fadeIn( prevAudio );\n\n    return { prevAudio, prevIndex };\n  }, // playPreviousTrack\n\n\n  playNextTrack( nowPlaying, audioPlayers ){\n\n    if( nowPlaying.track === undefined ){\n      return {prevAudio: null, prevIndex: null};\n    }\n\n    let nextIndex = nowPlaying.index + 1;\n    let nextAudio = audioPlayers[ nextIndex ];\n\n    while( nextIndex < audioPlayers.length && !nextAudio ){\n      nextIndex++;\n      nextAudio = audioPlayers[ nextIndex ];\n    }\n\n    if( !nextAudio ){\n      return {nextAudio: null, nextIndex: null}; // start of list\n    }\n\n    // stop current, start next\n    this.fadeOut( nowPlaying.audio );\n    this.fadeIn( nextAudio );\n\n    return { nextAudio, nextIndex };\n  }, // playNextTrack\n\n\n  fadeOut( audio ){\n    // Pasted from https://stackoverflow.com/a/36900986\n    if(audio.volume){\n      let vol = audio.volume;\n      const speed = 0.08;  // Rate of decrease\n      const fAudio = setInterval(function(){\n        vol -= speed;\n        audio.volume = vol.toFixed(1);\n        if( vol.toFixed(1) <= 0 ){\n           clearInterval(fAudio);\n           audio.pause();\n           audio.volume = 1.0; // just in case?\n        }\n      }, 50);\n    }\n  }, //audioFadeOut\n\n\n  fadeIn( audio ){\n    // Pasted from https://stackoverflow.com/a/36900986\n    audio.play();\n    let vol = 0;\n    audio.volume = vol;\n    const speed = 0.08;  // Rate of increase\n    const fAudio = setInterval(function(){\n      vol += speed;\n      audio.volume = vol.toFixed(1);\n      if( vol.toFixed(1) >= 1.0 ){\n         clearInterval(fAudio);\n      }\n    }, 50);\n  }, //audioFadeOut\n\n}; // player object\n\n\nconst getImageURL = (images) => {\n  if( images && images.length > 0 ){\n    return 'url(' + images[0].url + ')';  // length-1 for smallest?\n  }\n  return '';\n};\n\n\n// Functional component for showing track info, including audio tag\n//   - makes main ArtistDetails component render shorter & dryer\n//   - works for both artist top tracks, and recommendations\n//   - but needs lots of props passed to it, including the audio refs\n//   - uses 'children' to allow customising of visible tags\nconst Track = ({ item, index, nowPlaying, clickHandler, children, playerRefs, onTrackEnd, recClass }) => {\n  return (\n    <li\n     className={` player ${ recClass }\n       ${item.preview_url ? 'hasPreview' : 'noPreview'}\n       ${nowPlaying.index === index ? 'playing' : '' }\n      `}\n     onClick={ (e) => clickHandler(e, item, index) } >\n       { item.preview_url ?\n         <audio ref={ (ref) => playerRefs[index] = ref } onEnded={ onTrackEnd }>\n           <source type=\"audio/mpeg\" src={ item.preview_url } />\n         </audio>\n         : undefined\n       }\n       <span className=\"controls\" />\n       { children }\n    </li>\n  );\n};\n\n\nconst Heading = ({ name, tracks, genres }) => {\n  return (\n    <div className=\"heading\">\n      <h2>\n        <a id=\"artistName\" target=\"_blank\" rel=\"noreferrer\"\n         href={ tracks.length > 0 ? tracks[0].artists[0].external_urls.spotify : undefined }\n         title={ `View ${name} on Spotify` } >\n           { name }\n        </a>\n      </h2>\n      <span className=\"genres\">{ genres && genres.slice(0, 6).join(', ') }</span>\n    </div>\n  );\n};\n\n\nexport default ArtistDetails;\n","import React from 'react';\nimport './App.css';\n\nimport SearchResults from './SearchResults';\nimport ArtistDetails from './ArtistDetails';\n\nimport api from './lib/api';\n\nwindow.DEBUG = true;\n\n\nclass App extends React.Component {\n\n  // Only need this constructor() function so we can create a\n  // ref to the search form using 'createRef'\n  constructor(props){\n    super(props);\n\n    this.state = {\n      query: 'metz',\n      search: '',\n      currentArtist: {},\n      errorMsg: '',\n      breadcrumbTrail: [],\n      relatedArtists: [] // TODO: populate when viewing artist (in place of search results)\n    };\n\n    this.searchInput = React.createRef(); // control focus/blur of form input\n\n  } // constructor\n\n\n  componentDidMount(){\n\n    this.searchInput.current.focus();\n\n    // Testing only\n    const params = new URLSearchParams(window.location.search);\n\n    const testSearch = params.get('test');\n    if( testSearch ) {\n      this.setState({ search: testSearch });\n    }\n\n    const token = params.get('token');\n    if( token ){\n      api.setToken( token );\n      return; // don't fetch below\n    }\n\n    // TODO: test if localStorageToken available first?\n    const localStorageToken = localStorage.getItem('spotifyToken');\n    if( localStorageToken ){\n      console.log('localStorageToken loaded');\n      api.setToken( localStorageToken );\n      return; // don't fetch token remotely, below\n    }\n\n\n    // Get token from Cloud Function endpoint\n    api.getToken()\n    .catch( err => {\n      this.setState({ errorMsg: 'Error loading API token. Sorry!' });\n      // this.searchInput.current.disabled = true;\n    });\n\n  } //componentDidMount\n\n\n  handleChange = (ev) => {\n    this.setState({ query: ev.target.value });\n  }\n\n\n  setCurrentArtist = (id, name, genres, images) => {\n    if( this.state.currentArtist.id === id ){\n      return; // edge case: ignore clicks on the artist already being viewed\n    }\n    \n    this.setState({\n      currentArtist: { id, name, genres, images },\n      breadcrumbTrail: [ ...this.state.breadcrumbTrail, { id, name } ]\n    });\n  }\n\n\n  // A method to pass to API call methods (via child component props)\n  // so they can set and clear the 'generating new token' message\n  setErrorMsg = (msg) => {\n    this.setState({ errorMsg: msg });\n  }\n\n\n  handleSubmit = (ev) => {\n    ev.preventDefault();\n    // copy query text to 'search', which triggers <SearchResults>\n    this.setState({ search: this.state.query });\n    this.searchInput.current.blur(); // blur form so keypresses work to control audio\n  }\n\n\n  loadArtist = (id) => {\n\n    // Because this artist has been selected from a recommendation (or from a\n    // breadcrumb trail click), we don't have the artist image & genres as we do\n    // from a search result; so first we have to get the artist details, and then\n     // we can load the Top Tracks and Recommendations, as usual\n    api.getArtistInfo( id, this.setErrorMsg )\n    .then( ({data: a}) => this.setCurrentArtist(a.id, a.name, a.genres, a.images) );\n\n  } // loadArtist\n\n\n  render(){\n\n    return (\n      <div className=\"App\">\n\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\"\n           id=\"searchText\"\n           placeholder=\"artist search\"\n           onChange={this.handleChange}\n           ref={ this.searchInput }\n          />\n          <button>Go</button>\n        </form>\n\n        <div id=\"status\">{ this.state.errorMsg }</div>\n\n        <BreadcrumbTrail trail={ this.state.breadcrumbTrail } onClick={ this.loadArtist } />\n\n        {\n          this.state.currentArtist.id !== undefined\n          &&\n          <ArtistDetails\n           artist={ this.state.currentArtist }\n           onError={ this.setErrorMsg }\n           onViewArtist={ this.loadArtist }\n          />\n        }\n\n        {\n          this.state.search.length > 0\n          &&\n          <SearchResults\n           searchText={ this.state.search }\n           onArtistSelect={ this.setCurrentArtist }\n           onError={ this.setErrorMsg }\n          />\n        }\n\n      </div>\n    );\n  } // render\n\n} // class App\n\n\nconst BreadcrumbTrail = ({trail, onClick}) => {\n\n  if( trail.length < 2 ){\n    return null;\n  }\n\n  return (\n    <div id=\"trail\">\n    <strong>Trail</strong>: &nbsp;\n    <ul className=\"trail\">\n    {\n      trail.map( (artist, i) => {\n        // Don't show last (current) item\n        return i === trail.length-1 ? null : (\n          <li key={ artist.id }>\n            <div onClick={ () => onClick(artist.id) }>{ artist.name }</div>\n            { i < trail.length-2 && <span>&gt;</span> }\n          </li>\n        );\n      })\n    }\n    </ul>\n    </div>\n  );\n}; // BreadcrumbTrail\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}